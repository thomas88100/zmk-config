/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#undef ZMK_BEHAVIORS_KEEP_ALL

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define NAV_L 1
#define OTHER_L 2
#define NUM_L 3
#define SYM_L 4

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick-tap-ms = <200>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp Q    &kp W        &kp F  &kp P  &kp G    &kp J  &kp L  &kp U      &kp Y            &kp ESC
&kp A    &kp R        &kp S  &kp T  &kp D    &kp H  &kp N  &kp E      &kp I            &kp O
&kp Z    &kp X        &kp C  &kp V  &kp B    &kp K  &kp M  &kp COMMA  &kp DOT          &kp FSLH
&kp TAB  &lt 1 SPACE                                                  &lt 2 BACKSPACE  &kp RET
            >;
        };

        layer_1 {
            bindings = <
&kp N1   &kp N2  &kp N3  &kp N4  &kp N5    &kp N6    &kp N7    &kp N8  &kp N9     &kp N0
&kp DEL  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans
&trans   &trans  &trans  &trans  &trans    &kp HOME  &trans    &trans  &kp END    &trans
&trans   &trans                                                        &trans     &trans
            >;
        };

        layer_2 {
            bindings = <
&kp LS(EXCL)  &kp LS(AT)  &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)    &kp LS(CARET)  &kp LS(AMPS)   &kp LS(STAR)  &kp GRAVE      &kp LS(TILDE)
&kp LS(DQT)   &kp LBKT    &kp LS(LBRC)   &kp LS(LPAR)  &trans           &kp LS(LT)     &kp MINUS      &kp EQUAL     &kp LS(COLON)  &kp SEMI
&kp SQT       &kp RBKT    &kp LS(RBRC)   &kp LS(RPAR)  &trans           &kp LS(GT)     &kp LS(UNDER)  &kp LS(PLUS)  &kp LS(PIPE)   &kp BSLH
&trans        &trans                                                                                                &trans         &trans
            >;
        };
    };
};
